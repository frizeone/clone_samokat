scalar DateTime

type OrderItem {
    id: ID!
    orderId: Int!
    productId: Int!
    quantity: Int
    pricePerUnit: Float
}

type Order {
    id: ID!
    userId: Int!
    totalPrice: Float
    status: String
    createdAt: DateTime
    orderItems: [OrderItem]
}

type User {
    id: ID!
    email: String!
    firstName: String
    lastName: String
    phoneNumber: String
    createdAt: DateTime
    updatedAt: DateTime
}

type Query {
    getOrderById(id: Int): Order
    getAllOrders: [Order]
}

type Mutation {
    createOrder(orderInput: OrderInput): Order
    createUser(userInput: UserInput): User
}

input OrderItemInput {
    productId: Int!
    quantity: Int!
    pricePerUnit: Float!
}

input OrderInput {
    userId: Int!
    totalPrice: Float!
    status: String!
    createdAt: DateTime
    orderItems: [OrderItemInput!]
}

input UserInput {
    id: Int!
    email: String!
    passwordHash: String!
    firstName: String
    lastName: String
    phoneNumber: String
}
